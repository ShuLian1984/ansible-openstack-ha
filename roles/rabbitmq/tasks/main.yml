---

- name: Install rabbitmq
  yum: name=rabbitmq-server state=present
  retries: 5
  delay: 2
  tags: install

- name: copy rabbitmq config
  template: src=rabbitmq.config.j2 dest=/etc/rabbitmq/rabbitmq.config force=yes
  tags: install

- name: Start rabbitmq
  service: name=rabbitmq-server state=started enabled=yes
  retries: 5
  delay: 2
  tags: install

- name: Stop rabbitmq
  service: name=rabbitmq-server state=stopped
  retries: 5
  delay: 2
  tags: install

- name: download cookie from con-itools-node-01
  fetch:
    src: /var/lib/rabbitmq/.erlang.cookie
    dest: /etc/ansible/roles/rabbitmq/files/.erlang.cookie
    flat: yes
  when: hostname == 'con-itools-node-01'
  tags: cluster-before

- name: copy cookie to other node
  copy:
    src: /etc/ansible/roles/rabbitmq/files/.erlang.cookie
    dest: /var/lib/rabbitmq/.erlang.cookie
    owner: rabbitmq
    group: rabbitmq
    mode: 0400
  when: hostname != 'con-itools-node-01'
  tags: cluster-before

- name: Start rabbitmq
  service: name=rabbitmq-server state=started
  retries: 5
  delay: 2
  tags: cluster

- name: Create rabbitmq cluster
  command: rabbitmqctl set_cluster_name {{ rabbitmq_cluster_name }}
  when: hostname == 'con-itools-node-01'
  tags: cluster

- name: Stop rabbitmq app
  shell: rabbitmqctl stop_app; sleep 5;
  when: hostname != 'con-itools-node-01'
  tags: cluster

- name: Join rabbitmq cluster
  command: >
        rabbitmqctl join_cluster "rabbit@{{hostvars[groups['controller'][0]]['hostname']}}"
  retries: 5
  delay: 2
  when: hostname != 'con-itools-node-01'
  tags: cluster

- name: Start rabbitmq app
  shell: rabbitmqctl start_app; sleep 5;
  when: hostname != 'con-itools-node-01'
  tags: cluster

- name: Create Openstack User
  rabbitmq_user: user={{ rabbitmq_user }}
    password={{ rabbitmq_pass }}
    vhost=/
    configure_priv=.*
    read_priv=.*
    write_priv=.*
    tags=administrator
    state=present
  when: hostname == 'con-itools-node-01'
  tags: cluster

- name: ensure the default vhost contains the HA policy
  rabbitmq_policy: name=ha-all pattern='^(?!amq\.).*' tags='ha-mode=all'

- name: enable rabbit web UI
  rabbitmq_plugin: names=rabbitmq_management state=enabled

- name: Check cluster
  shell: rabbitmqctl cluster_status
  register: rabbit_cluster_status
  tags: check

- debug: msg="{{ rabbit_cluster_status }}"
